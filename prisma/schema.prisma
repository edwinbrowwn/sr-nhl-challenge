// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// https://statsapi.web.nhl.com/api/v1/people/ID - Player by id
model Player {
  id String @id @default(uuid()) @db.Uuid
  leagueId Int @unique // Player id
  name String // Player name
  age Int // Player age
  number Int? // Player number
  position String // Player position
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  teamId String @db.Uuid
  team Team @relation("playerTeam", fields: [teamId], references: [id])
  gameAgg PlayerGameAgg[]
}

// https://statsapi.web.nhl.com/api/v1/teams - All teams
// https://statsapi.web.nhl.com/api/v1/teams/1 - Teams by id
model Team {
  id String @id @default(uuid()) @db.Uuid
  leagueId Int @unique // Team id
  name String // Team name
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  homeGames Game[] @relation("homeTeam")
  awayGames Game[] @relation("awayTeam")
  players Player[] @relation("playerTeam")
}

// https://statsapi.web.nhl.com/api/v1/schedule - All games
// https://statsapi.web.nhl.com/api/v1/schedule?teamId=5 - Games by team id
model Game {
  id String @id @default(uuid()) @db.Uuid
  leagueId Int @unique
  gameType String
  season String
  gameDate DateTime
  status String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  homeTeamScore Int
  awayTeamScore Int
  homeTeamId String @db.Uuid
  awayTeamId String @db.Uuid
  homeTeam Team @relation("homeTeam", fields: [homeTeamId], references: [id])
  awayTeam Team @relation("awayTeam", fields: [awayTeamId], references: [id])
  gameAgg PlayerGameAgg[]
}

// https://statsapi.web.nhl.com/api/v1/game/ID/feed/live - Detailed game data
// https://statsapi.web.nhl.com/api/v1/game/ID/boxscore - ... a bit less
model PlayerGameAgg {
  id String @id @default(uuid()) @db.Uuid
  assists Int // Assists
  goals Int // Goals
  hits Int // Hits
  points Int? // Points
  penaltyMin Int // Penalty minutes
  position String // Current Position
  teamId String // Current Team
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  playerId String @db.Uuid
  gameId String @db.Uuid
  player Player @relation(fields: [playerId], references: [id])
  game Game @relation(fields: [gameId], references: [id])
}
